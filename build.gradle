/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.2/userguide/tutorial_java_projects.html
 */

plugins {
    id 'java'
    id 'groovy'
    id "com.github.ben-manes.versions" version "0.27.0"
//    id 'com.adarshr.test-logger' version '2.0.0'
}



group 'se.techinsight'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {

    implementation 'org.codehaus.groovy:groovy-all:2.5.8'
    implementation 'com.github.javafaker:javafaker:1.0.1'

    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    implementation 'com.squareup.retrofit2:converter-jackson:2.6.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'

    compile 'org.postgresql:postgresql:42.2.8'



    //add Logback
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'ch.qos.logback:logback-core:1.2.3'
    implementation 'org.slf4j:jul-to-slf4j:1.7.28'
    implementation 'org.slf4j:slf4j-api:1.7.28'
//    implementation 'org.slf4j:slf4j-simple:1.7.28'


    // SSH
    implementation "com.jcraft:jsch:0.1.55"
    implementation "commons-io:commons-io:2.6"
    implementation 'com.aestasit.infrastructure.sshoogr:sshoogr:0.9.26'


    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    compile 'org.junit.jupiter:junit-jupiter-params:5.5.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'

//    compile  'org.seleniumhq.selenium:selenium-java:3.141.59'


//    testAnnotationProcessor 'org.projectlombok:lombok'
//    testCompileOnly 'org.projectlombok:lombok'

    //lombok
//    compileOnly 'org.projectlombok:lombok:1.18.10'
//    annotationProcessor 'org.projectlombok:lombok:1.18.10'

    def lombokVersion = "1.18.10"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"


    testImplementation "com.google.truth:truth:1.0"

}



test {
    // Use junit platform for unit tests
    useJUnitPlatform()

    testLogging.showStandardStreams = true
//    maxParallelForks = (int) (Runtime.runtime.availableProcessors().intdiv(2) ?: 1)
    systemProperty "com.google.common.truth.disable_stack_trace_cleaning", "true"

//gradle test --tests "se.techinsight.test.PrintInfoTest"

//    testLogging {
//        events "passed", "skipped", "failed"
//    }


}

tasks {
    dependencyUpdates {
        checkConstraints = true
    }
}

//testlogger {
//    theme 'standard'
//    showExceptions false
//    showStackTraces false
//    showFullStackTraces false
//    showCauses true
//    slowThreshold 2000
//    showSummary true
//    showSimpleNames false
//    showPassed true
//    showSkipped true
//    showFailed true
//    showStandardStreams false
//    showPassedStandardStreams true
//    showSkippedStandardStreams true
//    showFailedStandardStreams true
//}
